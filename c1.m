clear; % clear CommandWindow and workspace
 sayac=0;
 AGS=zeros(3,1);
 eps=1e-8;% for sedumi
 bigeps=eps;% for sedumi
 maxiter=400;% for sedumi
 degrees=1:10;
 timescale=1;
 tolerance=1*10^(-7.5);

 toleranceRed = tolerance%this is for reduced hence should be smaller
 n=2;%the dimension of the state space
 hold on
%t=0:0.01:1.57;
% xt=0.5*cos(t);
% plot(t,xt)
%  for r=0.0156:0.01:0.0156
%      a2=r;
%  for aa=0.2127:0.01   :0.2127
%          b1=-aa;
         % define the plant itself
         G = @(y)(0.1E1+y(1).^2).^3.*(0.1E1+y(2).^2).^3;
  F1=@(y)0.949445E1.*(0.61615E-5+(-0.100009E1).*y(1)+(-0.53922E0).*y(1).^2+ ...
  (-0.999983E0).*y(1).^3+(-0.107853E1).*y(1).^4+0.100015E1.*y(1).^5+ ...
  (-0.539308E0).*y(1).^6+0.100005E1.*y(1).^7+(-0.452738E-4).*y(2)+ ...
  0.107849E1.*y(1).*y(2)+(-0.266653E1).*y(1).^2.*y(2)+0.107881E1.*y( ...
  1).^3.*y(2)+(-0.533383E1).*y(1).^4.*y(2)+(-0.107829E1).*y(1).^5.* ...
  y(2)+(-0.266735E1).*y(1).^6.*y(2)+(-0.107862E1).*y(1).^7.*y(2)+ ...
  0.813212E-4.*y(2).^2+(-0.333927E0).*y(1).*y(2).^2+0.269606E1.*y(1) ...
  .^2.*y(2).^2+(-0.331863E0).*y(1).^3.*y(2).^2+0.539301E1.*y(1).^4.* ...
  y(2).^2+0.334849E0.*y(1).^5.*y(2).^2+0.269703E1.*y(1).^6.*y(2).^2+ ...
  0.332785E0.*y(1).^7.*y(2).^2+0.214931E-3.*y(2).^3+0.325285E-3.*y( ...
  1).*y(2).^3+(-0.8826E-3).*y(1).^2.*y(2).^3+(-0.52734E-3).*y(1) ...
  .^3.*y(2).^3+0.644793E-3.*y(1).^4.*y(2).^3+(-0.52734E-3).*y(1) ...
  .^5.*y(2).^3+0.174232E-2.*y(1).^6.*y(2).^3+0.325285E-3.*y(1).^7.* ...
  y(2).^3+(-0.813212E-4).*y(2).^4+(-0.333056E0).*y(1).*y(2).^4+ ...
  0.26967E1.*y(1).^2.*y(2).^4+(-0.333831E0).*y(1).^3.*y(2).^4+ ...
  0.539252E1.*y(1).^4.*y(2).^4+0.332881E0.*y(1).^5.*y(2).^4+ ...
  0.269574E1.*y(1).^6.*y(2).^4+0.333656E0.*y(1).^7.*y(2).^4+( ...
  -0.452738E-4).*y(2).^5+(-0.107862E1).*y(1).*y(2).^5+0.266717E1.*y( ...
  1).^2.*y(2).^5+(-0.107829E1).*y(1).^3.*y(2).^5+0.533356E1.*y(1) ...
  .^4.*y(2).^5+0.107881E1.*y(1).^5.*y(2).^5+0.266634E1.*y(1).^6.*y( ...
  2).^5+0.107849E1.*y(1).^7.*y(2).^5+(-0.61615E-5).*y(2).^6+( ...
  -0.100014E1).*y(1).*y(2).^6+(-0.539332E0).*y(1).^2.*y(2).^6+( ...
  -0.999813E0).*y(1).^3.*y(2).^6+(-0.107857E1).*y(1).^4.*y(2).^6+ ...
  0.100032E1.*y(1).^5.*y(2).^6+(-0.539245E0).*y(1).^6.*y(2).^6+ ...
  0.1E1.*y(1).^7.*y(2).^6);

  F2=@(y)0.949445E1.*(0.61615E-5+(-0.452738E-4).*y(1)+0.813212E-4.*y(1).^2+ ...
  0.214931E-3.*y(1).^3+(-0.813212E-4).*y(1).^4+(-0.452738E-4).*y(1) ...
  .^5+(-0.61615E-5).*y(1).^6+(-0.100009E1).*y(2)+0.107849E1.*y(1).* ...
  y(2)+(-0.333927E0).*y(1).^2.*y(2)+0.325285E-3.*y(1).^3.*y(2)+( ...
  -0.333056E0).*y(1).^4.*y(2)+(-0.107862E1).*y(1).^5.*y(2)+( ...
  -0.100014E1).*y(1).^6.*y(2)+(-0.53922E0).*y(2).^2+(-0.266653E1).* ...
  y(1).*y(2).^2+0.269606E1.*y(1).^2.*y(2).^2+(-0.8826E-3).*y(1).^3.* ...
  y(2).^2+0.26967E1.*y(1).^4.*y(2).^2+0.266717E1.*y(1).^5.*y(2).^2+( ...
  -0.539332E0).*y(1).^6.*y(2).^2+(-0.999983E0).*y(2).^3+0.107881E1.* ...
  y(1).*y(2).^3+(-0.331863E0).*y(1).^2.*y(2).^3+(-0.52734E-3).*y(1) ...
  .^3.*y(2).^3+(-0.333831E0).*y(1).^4.*y(2).^3+(-0.107829E1).*y(1) ...
  .^5.*y(2).^3+(-0.999813E0).*y(1).^6.*y(2).^3+(-0.107853E1).*y(2) ...
  .^4+(-0.533383E1).*y(1).*y(2).^4+0.539301E1.*y(1).^2.*y(2).^4+ ...
  0.644793E-3.*y(1).^3.*y(2).^4+0.539252E1.*y(1).^4.*y(2).^4+ ...
  0.533356E1.*y(1).^5.*y(2).^4+(-0.107857E1).*y(1).^6.*y(2).^4+ ...
  0.100015E1.*y(2).^5+(-0.107829E1).*y(1).*y(2).^5+0.334849E0.*y(1) ...
  .^2.*y(2).^5+(-0.52734E-3).*y(1).^3.*y(2).^5+0.332881E0.*y(1).^4.* ...
  y(2).^5+0.107881E1.*y(1).^5.*y(2).^5+0.100032E1.*y(1).^6.*y(2).^5+ ...
  (-0.539308E0).*y(2).^6+(-0.266735E1).*y(1).*y(2).^6+0.269703E1.*y( ...
  1).^2.*y(2).^6+0.174232E-2.*y(1).^3.*y(2).^6+0.269574E1.*y(1).^4.* ...
  y(2).^6+0.266634E1.*y(1).^5.*y(2).^6+(-0.539245E0).*y(1).^6.*y(2) ...
  .^6+0.100005E1.*y(2).^7+(-0.107862E1).*y(1).*y(2).^7+0.332785E0.* ...
  y(1).^2.*y(2).^7+0.325285E-3.*y(1).^3.*y(2).^7+0.333656E0.*y(1) ...
  .^4.*y(2).^7+0.107849E1.*y(1).^5.*y(2).^7+0.1E1.*y(1).^6.*y(2).^7+ ...
  (-0.935472E-16).*y(1).*y(2).^8+(-0.187094E-15).*y(1).^3.*y(2).^8+( ...
  -0.935472E-16).*y(1).^5.*y(2).^8);

F1Red=@(x)0.949488E1.*(0.616122E-5+(-0.100005E1).*x+(-0.539196E0).*x.^2+( ...
  -0.999938E0).*x.^3+(-0.107849E1).*x.^4+0.100011E1.*x.^5+( ...
  -0.539283E0).*x.^6+0.1E1.*x.^7);
%tol=1e+4;
%u=10
%tolerance=tol/sum([sqrt(F1([0 0])^2+F2([0 0])^2),sqrt(F1([u u])^2+F2([u u])^2),sqrt(F1([u -u])^2+F2([u -u])^2),sqrt(F1([-u u])^2+F2([-u u])^2),sqrt(F1([-u -u])^2+F2([-u -u])^2)])
%toleranceRed=tol/sum([sqrt(F1Red([0])^2),sqrt(F1Red([u])^2),sqrt(F1Red([-u])^2)])
GRed=@(x)(0.1E1+x.^2).^3;
        for degree=degrees%this is actually the half of the degree
            degreeInt=1;
            x=sdpvar(n,1);
            y=sdpvar(n-1,1);
            degree*2;
            [rho,wrho] = polynomial(x,2*degree);
            [rhoRed,wrhoRed] = polynomial(y,2*degree);
            f1 = F1(x);
            f2 = F2(x);
            g = G(x);
            f1Red=F1Red(y);
            gRed=GRed(y);
            div = jacobian( f1, x(1) )+...
                jacobian( f2, x(2) );
            fun = (g*rho*div+jacobian(rho,x)*[f1;f2]*g-rho*jacobian(g,x)*[f1;f2]);
            divRed = jacobian( f1Red, y );
            funRed = (gRed*rhoRed*divRed+jacobian(rhoRed,y)*f1Red*gRed-rhoRed*jacobian(gRed,y)*f1Red);
            %(Bx * div - alpha*jacobian(AnladÄ±m KHAS112Bx, x)*([Ax*f1 + g1*c;Ax*f2 + g2*c]));
            % fun = (Bx * div - alpha*jacobian(Bx, x)*([Ax*f1 + g1*c]));
            %constr = [sos(fun),sos(rho),sos(funRed),sos(rhoRed),sum(wrho)>=tolerance,sum(wrhoRed)>=toleranceRed]%,wrho(1)>=tolerance,wrhoRed(1)>=toleranceRed];
            constr = [sos(fun),sos(rho-tolerance),sos(funRed),sos(rhoRed-toleranceRed)];
            %constr = [sos(fun),sos(rho-tolerance),sos(funRed),sos(rhoRed-toleranceRed)];
            params = [wrho; wrhoRed];
%             constr =
%             [sos(fun),sos(rho),sum(wrho)>=tolerance,wrho(1)>=tolerance];
%             params = [wrho];
%             constr = [sos(funRed),sos(rhoRed),sum(wrhoRed)>=toleranceRed];
%            params = [ wrhoRed];
            %options = sdpsettings('solver','sdpa');
            %options = sdpsettings('solver','sdpt3');
            options = sdpsettings('solver','sedumi','verbose',0,'sedumi.eps',eps,'sedumi.bigeps', ...
                bigeps,'sedumi.maxiter',maxiter);
            %options = sdpsettings('solver','mosek');
            [sol,~,~,~]=solvesos(constr,1,options,params);
            if sol.problem==0
                
                               
                %yalmip('clear')
                %sayac=sayac+1;
                %AGS(:,sayac)=[r;aa;2*degree];
                %save('saveVDP2.mat'
                %[r aa]
                %AGS
                break
            end
            degree
            %[r aa]
            %AGS
            %yalmip('clear')
        end
  %  end
 %end
%plot(AGS(2,:),AGS(1,:),'*')
%,
display(double(wrho));
display(double(wrhoRed));

realparamB=double(wrho)
        x = sdpvar(1,1);y = sdpvar(1,1);
        vv = monolist([x; y],degree*2);
      
        Bpoly = sdisplay(round(realparamB,10)'*vv)
         B=eval(['@(x,y)' Bpoly{1}])
           








